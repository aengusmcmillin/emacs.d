#+TITLE: Emacs Configuration
#+AUTHOR: Aengus F. McMillin
  
* Startup

** Initialize packages

#+BEGIN_SRC emacs-lisp
(package-initialize)
(setq custom-file (expand-file-name (concat user-emacs-directory "custom-settings.el")))
(load custom-file t t)
#+END_SRC
   
** Configure package archives

#+BEGIN_SRC emacs-lisp
(setq package-archives
    '(("melpa" . "https://melpa.org/packages/")
      ("org" . "https://orgmode.org/elpa/")))
#+END_SRC
   
** Configure use-package and delight

#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(setq use-package-always-ensure t)
(setq use-package-verbose t)

(unless (package-installed-p 'delight)
  (package-install delight))

(require 'use-package)
(require 'delight)
(use-package auto-compile
  :config (auto-compile-on-load-mode))
(setq load-prefer-newer t)
#+END_SRC

* Magit
** Setup
#+BEGIN_SRC emacs-lisp
    (use-package magit)
#+END_SRC
** Configuration
#+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC

* Other

#+BEGIN_SRC emacs-lisp
(use-package which-key
  :demand t
  :config
  (progn
    (which-key-mode)
    (setq which-key-sort-order 'which-key-key-order-alpha
	  which-key-sort-uppercase-first nil
	  which-key-prefix-prefix nil
	  which-key-idle-delay 0.3)))

(use-package general
  :demand
  :config
  (progn
    (general-evil-setup)))
    
(use-package evil
  :ensure t
  :init (setq evil-want-C-u-scroll t)
  :config (evil-mode 1))

(use-package evil-collection
  :after evil
  :config (evil-collection-init))
  
(use-package doom-themes
  :ensure t
  :init 
  (load-theme 'doom-one t))

#+END_SRC

To install, clone directly to your home directory. Or get my ansible environment bootstrap from https://github.com/aengusmcmillin/env.git and use ansible

** Garbage Collection Settings
We want to up the GC in the beginning for faster loading, and then reduce it later for lower memory usage

#+BEGIN_SRC emacs-lisp
    (setq gc-cons-threshold (* 100 1024 1024)
	gc-cons-percentage 0.6)
#+END_SRC

** No backup files

#+BEGIN_SRC emacs-lisp
    (setq make-backup-files nil)
#+END_SRC

** Change auto-save location
I don't want to keep the autosave files next to the actual file

#+BEGIN_SRC emacs-lisp
    (setq backup-directory-alist
	`((".*" . ,temporary-file-directory)))
    (setq auto-save-file-name-transforms
	`((".*" ,temporary-file-directory t)))
#+END_SRC


* Conclusion

#+BEGIN_SRC emacs-lisp
(add-hook 'emacs-startup-hook
          (lambda () (message (concat "Booted in: " (emacs-init-time))))
          (setq gc-cons-threshold (* 20 1024 1024)
                gc-cons-percentage 0.1))
#+END_SRC
