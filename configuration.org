#+TITLE: Emacs Configuration
#+AUTHOR: Aengus F. McMillin

* Installation 
*Initial*
Clone to your home directory. Alternatively, if you want my whole linux/osx environment checkout https://github.com/aengusmcmillin/env

=git clone git@github.com/aengusmcmillin/emacs.d.git ~/.emacs.d=

* Startup
** Initialize packages
#+BEGIN_SRC emacs-lisp :tangle yes
(package-initialize)

(require 'package)
#+END_SRC
   
** Configure package archives
#+BEGIN_SRC emacs-lisp :tangle yes
(setq package-archives
    '(("gnu" . "https://elpa.gnu.org/packages/")
      ("melpa" . "https://melpa.org/packages/")
      ("org" . "https://orgmode.org/elpa/")))
#+END_SRC
   
** Declare packages to use
#+BEGIN_SRC emacs-lisp :tangle yes
(defvar my-packages '(evil
		      projectile
		      helm
		      helm-projectile
		      which-key
		      general
		      magit
		      rust-mode
		      racer
		      doom-themes))
#+END_SRC
   
** Pre-Configure packages
#+BEGIN_SRC emacs-lisp :tangle yes
(setq evil-want-C-u-scroll t)
#+END_SRC
   
** Load packages
#+BEGIN_SRC emacs-lisp :tangle yes
(dolist (p my-packages)
  (unless (package-installed-p p)
    (package-refresh-contents)
    (package-install p))
  (add-to-list 'package-selected-packages p))
#+END_SRC

** Garbage Collection Settings
We want to up the GC in the beginning for faster loading, and then reduce it later for lower memory usage

#+BEGIN_SRC emacs-lisp :tangle yes
(setq gc-cons-threshold (* 100 1024 1024)
    gc-cons-percentage 0.6)
#+END_SRC

** Set custom file
#+BEGIN_SRC emacs-lisp :tangle yes
(setq custom-file (expand-file-name (concat user-emacs-directory "custom-settings.el")))
(load custom-file t)
#+END_SRC

** Auto Save Settings
#+BEGIN_SRC emacs-lisp :tangle yes
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))
#+END_SRC

* Personal Info
#+BEGIN_SRC emacs-lisp :tangle yes
(setq user-full-name "Aengus McMillin"
      user-mail-address "aengusmcmillin@gmail.com")
#+END_SRC

* Packages
** =helm=
#+BEGIN_SRC 
(global-set-key (kbd "M-x") 'helm-M-x)
#+END_SRC

** =evil=
#+BEGIN_SRC emacs-lisp :tangle yes
(evil-mode)
#+END_SRC

** =magit=
#+BEGIN_SRC emacs-lisp :tangle yes
(global-set-key (kbd "C-x g") 'magit-status)
(add-hook 'with-editor-mode-hook 'evil-normal-state)
#+END_SRC
   
** =projectile=
#+BEGIN_SRC emacs-lisp :tangle yes
(setq projectile-keymap-prefix (kbd "C-c p"))
(setq projectile-completion-system 'default)
(setq projectile-enable-caching t)
(setq projectile-indexing-method 'git)
#+END_SRC
* Org
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-src-fontify-natively t)
#+END_SRC
* Appearance
** Load theme
#+BEGIN_SRC emacs-lisp :tangle yes
(load-theme 'doom-one t)
#+END_SRC
   
** Menu and Tool Bars
#+BEGIN_SRC emacs-lisp :tangle yes
(menu-bar-mode -1)
(tool-bar-mode -1)
#+END_SRC
 
* Languages
** Rust
#+BEGIN_SRC emacs-lisp :tangle yes
(setq rust-format-on-save t)
#+END_SRC
